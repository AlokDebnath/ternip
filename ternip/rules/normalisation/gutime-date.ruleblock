Block-Type: run-until-success
ID: gutime-date

---
# 1

Type: date
Tokenise: null
Match: (\d\d\d\d-?\d\d-?\d\d-?(T\d\d(:?\d\d)?(:?\d\d)?([\+\-]\d{1,4})?)?)
Value: date_to_iso({#1})

---
# 2

Type: date
Tokenise: null
Match: \d\d?[\/\.]\d\d?[\/\.]\d\d(\d\d)?
Value: date_to_iso({#0})

---
# 3

Type: date
Tokenise: null
Match: (\d{4})-(to-)(\d{4})
Value: {#1}/{#3}

---
# 4

Type: date
Tokenise: space
Match: ((\w+teen)\s+)?(twen|thir|for|fif|six|seven|eigh|nine)ties
Value: str((10 * words_to_num({#2}) if {#2} != None else 190) + decade_nums({#3}))

---
# 5

Type: date
Tokenise: null
Match: \'(\d)0s
Guard: !years
Value: str((200 if int({#1}) < 3 else 190) + int({#1}))

---
# 6

Type: date
Tokenise: null
Match: (\d{3})0\'?s
Guard: !years
Value: {#1}

---
# 7

Type: date
Guard: !years
Guard: !(fool|<may~.+><day~.+>)
Match: <($ORDINAL_WORDS|$ORDINAL_NUMS)~.+><weekend~.+><(of|in)~.+><($MONTHS|$MONTH_ABBRS)>(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: date_to_week(int(normalise_two_digit_year({#7})), month_to_num({#5}, ordinal_to_num({#1}) * 7 - 5)) + 'WE'

---
# 8

Type: date
Guard: !years
Guard: !(fool|<may~.+><day~.+>)
Match: <($ORDINAL_WORDS|$ORDINAL_NUMS)~.+><week~.+><(of|in)~.+><($MONTHS|$MONTH_ABBRS)>(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: date_to_week(int(normalise_two_digit_year({#7})), month_to_num({#5}, ordinal_to_num({#1}) * 7 - 3))

---
# 9

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: \b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: normalise_two_digit_year({#4}) + "%02d" % (month_to_num({#1}))
---
# 10

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: the\s+week\s+(of|in).*(\d\d?|$ORDINAL_WORDS).*\b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: date_to_week(int(normalise_two_digit_year({#7})), month_to_num({#4}), ordinal_to_num({#2}))
---
# 11

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: (\d\d?|$ORDINAL_WORDS).*\b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: "%4d%02d%02d" % (int(normalise_two_digit_year({#6})), month_to_num({#3}), ordinal_to_num({#1}))

---
# 12

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: the\s+week\s+(of|in).*\bides\b.*\b(mar(ch)?|may|july?|oct(ober)?)\b.*?(\d{4}|\'\d\d)
Value: date_to_week(int(normalise_two_digit_year({#5})), month_to_num({#2}), 15)

---
# 13

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: \bides\b.*\b(mar(ch)?|may|july?|oct(ober)?)\b.*?(\d{4}|\'\d\d)
Value: "%4d%02d%02d" % (int(normalise_two_digit_year({#4})), month_to_num({#1}), 15)

---
# 14

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: the\s+week\s+(of|in).*\bides\b.*\b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: date_to_week(int(normalise_two_digit_year({#5})), month_to_num({#2}), 13)

---
# 15

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: \bides\b.*\b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: "%4d%02d%02d" % (int(normalise_two_digit_year({#4})), month_to_num({#1}), 13)


---
# 16

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: the\s+week\s+(of|in).*\bnones\b.*\b(mar(ch)?|may|july?|oct(ober)?)\b.*?(\d{4}|\'\d\d)
Value: date_to_week(int(normalise_two_digit_year({#5})), month_to_num({#2}), 7)

---
# 17

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: \bnones\b.*\b(mar(ch)?|may|july?|oct(ober)?)\b.*?(\d{4}|\'\d\d)
Value: "%4d%02d%02d" % (int(normalise_two_digit_year({#4})), month_to_num({#1}), 7)

---
# 18

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: the\s+week\s+(of|in).*\bnones\b.*\b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: date_to_week(int(normalise_two_digit_year({#5})), month_to_num({#2}), 5)

---
# 19

Type: date
Tokenise: space
Guard: !years
Guard: !(fool|may\s+day)
Match: \bnones\b.*\b($MONTHS|$MONTH_ABBRS)\b.*?(\d{4}|\'\d\d)
Value: "%4d%02d%02d" % (int(normalise_two_digit_year({#4})), month_to_num({#1}), 5)

---
# 20

Type: date
Guard: !years
Match: $FIXED_HOLIDAYS(<.*>)*<(\d{4}|\'\d\d)~.+>
Guard: !eve
Value: normalise_two_digit_year({#3}) + fixed_holiday_date({#1})

---
# 21

Type: date
Guard: !years
Match: $FIXED_HOLIDAYS(<.*>)*<(\d{4}|\'\d\d)~.+>
Guard: eve
Value: offset_from_date(normalise_two_digit_year({#3}) + fixed_holiday_date({#1}), -1)

---
# 22

Type: date
Guard: !years
Match: <$NTH_DOW_HOLIDAYS~.>(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: "%4d%02d%02d" % (int(normalise_two_digit_year({#3})), nth_dow_holiday_date({#1})[0], nth_dow_to_day(nth_dow_holiday_date({#1}), int(normalise_two_digit_year({#3}))))

---
# 23

Type: date
Guard: !years
Match: <good~.+><friday~.+>(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: offset_from_date(easter_date(normalise_two_digit_year({#2})), -3)

---
# 24

Type: date
Guard: !years
Match: (<shrove~.+><tuesday~.+>|<mardis~.+><gras~.+>)(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: offset_from_date(easter_date(normalise_two_digit_year({#3})), -47)

---
# 25

Type: date
Guard: !years
Match: (<ash~.+><wednesday~.+>)(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: offset_from_date(easter_date(normalise_two_digit_year({#3})), -46)

---
# 26

Type: date
Guard: !years
Match: (<palm~.+><sunday~.+>)(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: offset_from_date(easter_date(normalise_two_digit_year({#3})), -7)

---
# 27

Type: date
Guard: !years
Match: (<easter~.+>)(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: easter_date(normalise_two_digit_year({#3}))

---
# 28

Type: date
Guard: !years
Match: <(spring|summer|autumn|fall|winter)~.+>(<.*>)*<(\d{4}|\'\d\d)~.+>
Value: normalise_two_digit_year({#3}) + season({#1})

---
# 29

Type: date
Guard: !years
Match: <(\d{4}|\'\d\d)~.+>
Value: normalise_two_digit_year({#1})

---
# 30

Type: date
Before-Guard: <(exact|precise).*>$
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><ago~.+>(<.*>*<(today|tomorrow|yesterday|$DAYS)~.+>)?
Value: offset_from_date(compute_offset_base(cur_context, {#6}, -1), -1 * words_to_num({#1}), {#3}, True)

---
# 31

Type: date
After-Guard: ^<(exact|precise).*>
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><ago~.+>(<.*>*<(today|tomorrow|yesterday|$DAYS)~.+>)?
Value: offset_from_date(compute_offset_base(cur_context, {#6}, -1), -1 * words_to_num({#1}), {#3}, True)

---
# 32

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><ago~.+><.*>*<(today|tomorrow|yesterday|$DAYS)~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#6}, -1), -1 * words_to_num({#1}), {#3}, True)

---
# 33

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><ago~.+>
Value: offset_from_date(cur_context, -1 * words_to_num({#1}), {#3}, False)

---
# 34

Type: date
Before-Guard: <(exact|precise).*>$
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><hence~.+>(<.*>*<(today|tomorrow|yesterday|$DAYS)~.+>)?
Value: offset_from_date(compute_offset_base(cur_context, {#6}, 1), words_to_num({#1}), {#3}, True)

---
# 35

Type: date
After-Guard: ^<(exact|precise).*>
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><hence~.+>(<.*>*<(today|tomorrow|yesterday|$DAYS)~.+>)?
Value: offset_from_date(compute_offset_base(cur_context, {#6}, 1), words_to_num({#1}), {#3}, True)

---
# 36

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><hence~.+><.*>*<(today|tomorrow|yesterday|$DAYS)~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#5}, 1), words_to_num({#1}), {#3}, True)

---
# 37

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><hence~.+>
Value: offset_from_date(cur_context, words_to_num({#1}), {#3}, False)

---
# 38

Type: date
Deliminate-Numbers: true
Match: <about~.+>(<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><from~.+><(now|today|tomorrow|yesterday|$DAYS)~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#5}, 1), words_to_num({#1}), {#3}, False)

---
# 39

Type: date
Before-Guard: <(exact|precise).*>$
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><from~.+><(now|today|tomorrow|yesterday|$DAYS)~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#5}, 1), words_to_num({#1}), {#3}, True)

---
# 40

Type: date
After-Guard: ^<(exact|precise).*>
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><from~.+><(now|today|tomorrow|yesterday|$DAYS)~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#5}, 1), words_to_num({#1}), {#3}, True)

---
# 41

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><from~.+><(now|today|tomorrow|yesterday|$DAYS)~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#5}, 1), words_to_num({#1}), {#3}, True)

---
# 42

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><before~.+><last~.+>
Value: offset_from_date(cur_context, -1 * words_to_num({#1}), {#3}, False)

---
# 43

Type: date
Deliminate-Numbers: true
Match: (<the~.+>|<a~.+>|NUM_START.*NUM_END)(<.*>)*<(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+><after~.+><next~.+>
Value: offset_from_date(cur_context, words_to_num({#1}), {#3}, False)

---
# 44

Type: date
Deliminate-Numbers: true
Match: <(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+>(<hence~.+>|<after~.+><next~.+>|<from~.+><(now|today|tomorrow|yesterday|$DAYS)~.+>)
Value: 'FUTURE_REF'

---
# 45

Type: date
Deliminate-Numbers: true
Match: <(while|year|month|moon|fortnight|week|day|decade|centur(y|ie)|time|long)s?~.+>(<ago~.+>|<before~.+><last~.+>)
Value: 'PAST_REF'

---
# 46

Type: date
Match: <($ORDINAL_NUMS|$ORDINAL_WORDS)~.+>(<.*>)*<century~.*>
Value: "%02d" % (ordinal_to_num({#1}) - 1)

---
# 47

Type: date
Match: <($ORDINAL_NUMS|$ORDINAL_WORDS)-century~.*>
Value: "%02d" % (ordinal_to_num({#1}) - 1)

---
# 48

Type: date
Match: ^<(now|current)~.*>$
Value: 'PRESENT_REF'

---
# 49

Type: date
Match: <future~.*>
Value: 'FUTURE_REF'

---
# 50

Type: date
Match: ^(<once~.+>|<medieval~.+>|<the~.+><past~.+>)$
Value: 'PAST_REF'

---
# 51

Type: date
Guard: morning
Tokenise: space
Guard: !\b(shrove|ash|good|palm|easter)\b
Match: ((every|every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*$DAYS
Value: 'XXXXWXX' + str(day_to_num({#6})) + 'TMO'
Change-Type: 'set'
Quant: {#1}

---
# 52

Type: date
Guard: afternoon
Tokenise: space
Guard: !\b(shrove|ash|good|palm|easter)\b
Match: ((every|every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*$DAYS
Value: 'XXXXWXX' + str(day_to_num({#6})) + 'TAF'
Change-Type: 'set'
Quant: {#1}

---
# 53

Type: date
Guard: evening
Tokenise: space
Guard: !\b(shrove|ash|good|palm|easter)\b
Match: ((every|every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*$DAYS
Value: 'XXXXWXX' + str(day_to_num({#6})) + 'TEV'
Change-Type: 'set'
Quant: {#1}

---
# 54

Type: date
Guard: night
Tokenise: space
Guard: !\b(shrove|ash|good|palm|easter)\b
Match: ((every|every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*$DAYS
Value: 'XXXXWXX' + str(day_to_num({#6})) + 'TNI'
Change-Type: 'set'
Quant: {#1}

---
# 55

Type: date
Match: ((every|every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*$DAYS
Tokenise: space
Guard: !\b(shrove|ash|good|palm|easter)\b
Value: 'XXXXWXX' + str(day_to_num({#6}))
Change-Type: 'set'
Quant: {#1}

---
# 56

Type: date
Match: (<(every|every|each|alternate)~.+>(<(other|$ORDINAL_WORDS|$ORDINAL_NUMS)~.+>)?)(<.*>)*(<(St\.|Saint)~.+>(<.*>)*<Day~.+>|<$NTH_DOW_HOLIDAYS~.+>|<$DAY_HOLIDAYS~.+>|$LUNAR_HOLIDAYS)
Value: 'P1Y'
Freq: '1D'
Change-Type: 'set'
Quant: {#1}

---
# 57

Type: date
Match: (<(every|every|each|alternate)~.+>(<(other|$ORDINAL_WORDS|$ORDINAL_NUMS)~.+>)?)(<.*>)*($FIXED_HOLIDAYS)
Value: 'XXXX' + fixed_holiday_date({#8})
Change-Type: 'set'
Quant: re.sub(r'<([^~]*)[^>]*>', r'\1', {#1})

---
# 58

Type: date
Match: ((every|every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*\b(spring|summer|winter|fall|autumn)s?\b
Tokenise: space
Value: 'XXXX' + season({#6})
Change-Type: 'set'
Quant: {#1}

---
# 59

Type: date
Match: ((every|each|alternate)\s+(other|$ORDINAL_WORDS|$ORDINAL_NUMS)?).*\b(minute|hour|day|week|month|year)s?\b
Tokenise: space
Value: 'P1' + units_to_gran({#6})
Change-Type: 'set'
Quant: {#1}

---
# 60

Type: date
Match: <every~.+>(<\d+~.+>|NUM_START.*NUM_END)<(minute|hour|day|week|month|year)s?~.+>
Deliminate-Numbers: True
Value: 'P' + str(words_to_num({#1})) + units_to_gran({#2})
Change-Type: 'set'
Quant: EVERY

---
# 61

Type: date
Match: (<every~.+>|<each~.+>|<alternate~.+>)
Change-Type: 'set'

---
# 62

Type: date
Match: bi(annual|year|month|week|dai|hour|night)ly
Value: 'P2' + units_to_gran({#1})

---
# 63

Type: date
Match: fortnightly
Value: 'P2W'

---
# 64

Type: date
Match: (annual|year|month|week|dai|hour|night)ly
Value: 'P1' + units_to_gran({#1})

---
# 65

Type: date
Match: biannual
Value: 'P2Y'

---
# 66

Type: date
Match: annual
Value: 'P1Y'

---
# 67

Type: date
Match: <day~.+><before~.+><yesterday~.+>
Value: offset_from_date(cur_context, -2)

---
# 68

Type: date
Match: <yesterday~.+>
Value: offset_from_date(cur_context, -1)

---
# 69

Type: date
Match: <($DAYS)~.+>(<.*>)*<($ORDINAL_NUMS|$ORDINAL_WORDS)~.+>
Guard: !<friday~.+><the~.+><(thirteen|13)th~.+>
Value: ('XXXXXX' if day_to_num({#1}) == date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), ordinal_to_num({#4})) else cur_context[:6]) + str(ordinal_to_num({#4}))

---
# 70

Type: date
Match: today
Before-Guard: <(said|later|earlier)~.+>$
Value: cur_context

---
# 71

Type: date
Match: today
After-Guard: ^<(for|at|on)~.+>
Value: cur_context

---
# 72

Type: date
Match: today
Before-Guard: <(am|is|are|were|was|that|of|in)~.+>$
Value: 'PRESENT_REF'

---
# 73

Type: date
Match: today
After-Guard: <(many|here|most)~.+>
Value: 'PRESENT_REF'

---
# 74

Type: date
Match: today
Before-Guard: <(many|here|most)~.+>
Value: 'PRESENT_REF'

---
# 75

Type: date
Match: today
Value: cur_context[:8]

---
# 76

Type: date
Match: <this~.+><morning~.+>
Value: cur_context[:8] + 'TMO'

---
# 77

Type: date
Match: <this~.+><afternoon~.+>
Value: cur_context[:8] + 'TAF'

---
# 78

Type: date
Match: <this~.+><evening~.+>
Value: cur_context[:8] + 'TEV'

---
# 79

Type: date
Match: <(tonight|tonite)~.+>
Value: cur_context[:8] + 'TNI'

---
# 80

Type: date
Match: <day~.+><after~.+><tomorrow~.+>
Value: offset_from_date(cur_context, 2)

---
# 81

Type: date
Match: <tomorrow~.+>
Value: offset_from_date(cur_context, 1)

---
# 82

Type: date
Guard: (next|coming)
Guard: !(fool|<may~.+><day~.+>)
Match: <($ORDINAL_NUMS|$ORDINAL_WORDS)~.+>(<.*>)*<($MONTHS|$MONTH_ABBRS)~.+>
Value: compute_offset_base(cur_context, {#5}, 1) + ("%02d" % ordinal_to_num({#1}))

---
# 83

Type: date
Guard: (last|past)
Guard: !(fool|<may~.+><day~.+>)
Match: <($ORDINAL_NUMS|$ORDINAL_WORDS)~.+>(<.*>)*<($MONTHS|$MONTH_ABBRS)~.+>
Value: compute_offset_base(cur_context, {#5}, -1) + ("%02d" % ordinal_to_num({#1}))

---
# 84

Type: date
Guard: (next|coming)
Guard: !(fool|<may~.+><day~.+>)
Match: <($MONTHS|$MONTH_ABBRS)~.+>(<.*>)*<($ORDINAL_NUMS|$ORDINAL_WORDS)~.+>
Value: compute_offset_base(cur_context, {#1}, 1) + ("%02d" % ordinal_to_num({#5}))

---
# 85

Type: date
Guard: (last|past)
Guard: !(fool|<may~.+><day~.+>)
Match: <($MONTHS|$MONTH_ABBRS)~.+>(<.*>)*<($ORDINAL_NUMS|$ORDINAL_WORDS)~.+>
Value: compute_offset_base(cur_context, {#1}, -1) + ("%02d" % ordinal_to_num({#5}))

---
# 86

Type: date
Guard: (next|coming)
Guard: !(fool|<may~.+><day~.+>)
Match: <($MONTHS|$MONTH_ABBRS)~.+>
Value: compute_offset_base(cur_context, {#1}, 1)

---
# 87

Type: date
Guard: (last|past)
Guard: !(fool|<may~.+><day~.+>)
Match: <($MONTHS|$MONTH_ABBRS)~.+>
Value: compute_offset_base(cur_context, {#1}, -1)

---
# 88

Type: date
Guard: (next|coming)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><morning~.+>
Value: compute_offset_base(cur_context, {#1}, 1) + 'TMO'

---
# 89

Type: date
Guard: (last|past)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><morning~.+>
Value: compute_offset_base(cur_context, {#1}, -1) + 'TMO'

---
# 90

Type: date
Guard: (next|coming)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><afternoon~.+>
Value: compute_offset_base(cur_context, {#1}, 1) + 'TAF'

---
# 91

Type: date
Guard: (last|past)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><afternoon~.+>
Value: compute_offset_base(cur_context, {#1}, -1) + 'TAF'

---
# 92

Type: date
Guard: (next|coming)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><evening~.+>
Value: compute_offset_base(cur_context, {#1}, 1) + 'TEV'

---
# 93

Type: date
Guard: (last|past)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><evening~.+>
Value: compute_offset_base(cur_context, {#1}, -1) + 'TEV'

---
# 94

Type: date
Guard: (next|coming)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><night~.+>
Value: compute_offset_base(cur_context, {#1}, 1) + 'TNI'

---
# 95

Type: date
Guard: (last|past)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+><night~.+>
Value: compute_offset_base(cur_context, {#1}, -1) + 'TNI'

---
# 96

Type: date
Guard: (next|coming)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+>
Value: compute_offset_base(cur_context, {#1}, 1)

---
# 97

Type: date
Guard: (last|past)
Guard: !<(shrove|ash|good|palm|easter)~.+>
Before-Guard: !<(the|a)~.+>$
Match: <($DAYS)~.+>
Value: compute_offset_base(cur_context, {#1}, -1)

---
# 98

Type: date
Guard: (next|coming)
Match: <(spring|summer|winter|fall|autumn)~.+>
Value: compute_offset_base(cur_context, season_to_month({#1}), 1)[:4] + season({#1})

---
# 99

Type: date
Guard: (this)
Match: <(spring|summer|winter|fall|autumn)~.+>
Value: cur_context[:4] + season({#1})

---
# 100

Type: date
Guard: (last|past)
Match: <(spring|summer|winter|fall|autumn)~.+>
Value: compute_offset_base(cur_context, season_to_month({#1}), -1)[:4] + season({#1})

---
# 101

Type: date
Guard: (this)
Match: <month~.+>
Value: offset_from_date(cur_context, 0, 'M')

---
# 102

Type: date
Guard: (next|coming)
Match: <month~.+>
Value: offset_from_date(cur_context, 1, 'M')

---
# 103

Type: date
Guard: (last|past)
Match: <month~.+>
Value: offset_from_date(cur_context, -1, 'M')

---
# 104

Type: date
Guard: (this)
Match: <year~.+>
Value: offset_from_date(cur_context, 0, 'Y')

---
# 105

Type: date
Guard: (next|coming)
Match: <year~.+>
Value: offset_from_date(cur_context, 1, 'Y')

---
# 106

Type: date
Guard: (last|past)
Match: <year~.+>
Value: offset_from_date(cur_context, -1, 'Y')

---
# 107

Type: date
Guard: (this)
Match: <century~.+>
Value: offset_from_date(cur_context, 0, 'C')

---
# 108

Type: date
Guard: (next|coming)
Match: <century~.+>
Value: offset_from_date(cur_context, 1, 'C')

---
# 109

Type: date
Guard: (last|past)
Match: <century~.+>
Value: offset_from_date(cur_context, -1, 'C')

---
# 110

Type: date
Guard: (this)
Match: <decade~.+>
Value: offset_from_date(cur_context, 0, 'E')

---
# 111

Type: date
Guard: (next|coming)
Match: <decade~.+>
Value: offset_from_date(cur_context, 1, 'E')

---
# 112

Type: date
Guard: (last|past)
Match: <decade~.+>
Value: offset_from_date(cur_context, -1, 'E')

---
# 113

Type: date
Match: <(past|last)~.+><night~.+>
Value: offset_from_date(cur_context, -1) + 'TNI'

---
# 114

Type: date
Match: <(next|coming)~.+><weekend~.+>
Value: date_to_week(int(offset_from_date(cur_context, -1 * date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), (cur_context[6:8])) + 6)[:4]), int(offset_from_date(cur_context, -1 * date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), (cur_context[6:8])) + 6)[4:6]), int(offset_from_date(cur_context, -1 * date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), (cur_context[6:8])) + 6)[6:8])) + 'WE'

---
# 115

Type: date
Match: <(past|last)~.+><weekend~.+>
Value: date_to_week(int(offset_from_date(cur_context, -1 * date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), (cur_context[6:8])) - 1)[:4]), int(offset_from_date(cur_context, -1 * date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), (cur_context[6:8])) - 1)[4:6]), int(offset_from_date(cur_context, -1 * date_to_dow(int(cur_context[:4]), int(cur_context[4:6]), (cur_context[6:8])) - 1)[6:8])) + 'WE'

---
# 116

Type: date
Match: <this~.+><week~.+>
Value: offset_from_date(cur_context, 0, 'W')

---
# 117

Type: date
Match: <(next|coming)~.+><week~.+>
Value: offset_from_date(cur_context, 1, 'W')

---
# 118

Type: date
Match: <last~.+><week~.+>
Value: offset_from_date(cur_context, -1, 'W')

---
# 119

Type: date
Match: <(next|coming)~.+>$FIXED_HOLIDAYS<eve~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#2}, 1), -1)

---
# 120

Type: date
Match: <(last|past)~.+>$FIXED_HOLIDAYS<eve~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#2}, -1), -1)

---
# 121

Type: date
Match: <(next|coming)~.+>$FIXED_HOLIDAYS
Value: compute_offset_base(cur_context, {#2}, 1)

---
# 122

Type: date
Match: <(last|past)~.+>$FIXED_HOLIDAYS
Value: compute_offset_base(cur_context, {#2}, -1)

---
# 123

Type: date
Guard: <(next|coming)~.+>
Match: $NTH_DOW_HOLIDAYS
Value: compute_offset_base(cur_context, {#1}, 1)

---
# 124

Type: date
Guard: <(last|past)~.+>
Match: $NTH_DOW_HOLIDAYS
Value: compute_offset_base(cur_context, {#1}, -1)

---
# 125

Type: date
Guard: <(next|coming)~.+>
Match: <good~.+><friday~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#0}, 1), -3)

---
# 126

Type: date
Guard: <(last|past)~.+>
Match: <good~.+><friday~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#0}, -1), -3)

---
# 127

Type: date
Guard: <(next|coming)~.+>
Match: (<shrove~.+><tuesday~.+>|<mardis~.+><gras~.+>)
Value: offset_from_date(compute_offset_base(cur_context, {#0}, 1), -47)

---
# 128

Type: date
Guard: <(last|past)~.+>
Match: (<shrove~.+><tuesday~.+>|<mardis~.+><gras~.+>)
Value: offset_from_date(compute_offset_base(cur_context, {#0}, -1), -47)

---
# 129

Type: date
Guard: <(next|coming)~.+>
Match: <ash~.+><wednesday~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#0}, 1), -46)

---
# 130

Type: date
Guard: <(last|past)~.+>
Match: <ash~.+><wednesday~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#0}, -1), -46)

---
# 131

Type: date
Guard: <(next|coming)~.+>
Match: <palm~.+><sunday~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#0}, 1), -7)

---
# 132

Type: date
Guard: <(last|past)~.+>
Match: <palm~.+><sunday~.+>
Value: offset_from_date(compute_offset_base(cur_context, {#0}, -1), -7)

---
# 133

Type: date
Guard: <(next|coming)~.+>
Match: <easter~.+>
Value: compute_offset_base(cur_context, {#0}, 1)

---
# 134

Type: date
Guard: <(last|past)~.+>
Match: <easter~.+>
Value: compute_offset_base(cur_context, {#0}, -1)
